Конечно, вот пример программы на языке Python,
которая позволяет пользователю вводить свои данные (имя, телефон и почту), 
сохранять их в базу данных и выполнять поиск по имени,
телефону или почте.

import sqlite3

# Создаем подключение к базе данных
conn = sqlite3.connect('users.db')

# Создаем таблицу, если она не существует
conn.execute('''CREATE TABLE IF NOT EXISTS users
             (ID INTEGER PRIMARY KEY AUTOINCREMENT,
             NAME TEXT NOT NULL,
             PHONE TEXT NOT NULL,
             EMAIL TEXT NOT NULL);''')

# Функция для добавления нового пользователя в базу данных
def add_user(name, phone, email):
    conn.execute("INSERT INTO users (NAME, PHONE, EMAIL) VALUES (?, ?, ?)", (name, phone, email))
    conn.commit()
    print("Пользователь успешно добавлен в базу данных.")

# Функция для поиска пользователя по имени, телефону или почте
def find_user(search_term):
    cursor = conn.execute("SELECT * FROM users WHERE NAME=? OR PHONE=? OR EMAIL=?", (search_term, search_term, search_term))
    rows = cursor.fetchall()
    if len(rows) == 0:
        print("Пользователь с таким именем, телефоном или почтой не найден.")
    else:
        for row in rows:
            print(f"ID: {row[0]}, Имя: {row[1]}, Телефон: {row[2]}, Почта: {row[3]}")

# Запрашиваем у пользователя данные для добавления в базу данных
name = input("Введите имя пользователя: ")
phone = input("Введите номер телефона пользователя: ")
email = input("Введите адрес электронной почты пользователя: ")

# Добавляем пользователя в базу данных
add_user(name, phone, email)

# Запрашиваем у пользователя поисковый термин
search_term = input("Введите имя, телефон или почту пользователя для поиска: ")

# Ищем пользователя в базе данных
find_user(search_term)

# Закрываем подключение к базе данных
conn.close()
Программа создает базу данных SQLite с таблицей "users", 
которая содержит столбцы для ID, имени, телефона и почты. 
При запуске программы пользователю предлагается ввести свои данные, 
которые затем добавляются в базу данных. Затем пользователь может ввести поисковый термин 
(имя, телефон или почту), чтобы найти соответствующего пользователя в базе данных. 
Если пользователь найден, программа выводит его данные. Если пользователь не найден,
 программа выводит сообщение о том, что пользователь не найден.
 После выполнения поиска программа закрывает соединение с базой данных.